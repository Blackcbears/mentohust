#labels Featured,Phase-QA
#Frequently Asked Questions

==1、MentoHUST与Mento Supplicant和mystar的关系？==
 * 最初的MentoHUST是在Mento Supplicant V3.8版的基础上修改的，在第二个版本中加入了DHCP功能以及Soar的客户端校验并简化了Alog、Blog两个算法，再后来对于Soar的客户端校验算法做了改进，对于认证流程也做了修改，MentoHUST与原有Mento的差异越来越大。总的来说，可以把MentoHUST看做对Mento的继承与发展。
 * 由于在编写MentoHUST for Linux之前，本人无任何gcc经验，所以在编写Linux版时参考了mystar的Makefile等文档。在代码上，MentoHUST for Linux主要是以Windows版的MentoHUST为参考，对于mystar并无多少借鉴。

==2、MentoHUST for Linux如何使用？==
 * 首先确保系统中有相应版本的libpcap.so，然后按照Readme.txt文件中步骤操作。
 * 如果学校开放了Linux版锐捷(xrgsu)的认证：设置好用户名、密码、DHCP模式等就可以开始认证，其他可选参数根据需要设置即可。
 * 如果学校未开放xrgsu的认证：在Windows下使用MentoHUSTTool制作适合自己学校的mpf文件（注意不能勾选“只抓取Start包”），然后在配置文件中进行设置，同样设置好用户名等参数，即可开始认证。
 * 主要参数为（括号中字母代表在命令行中设置参数时的前缀，具体见mentohust.conf）：
{{{
	;(U)用户名，长度不超过64
	Username=
	;(P)密码，长度不超过64
	Password=
	;(N)网卡
	Nic=
	;(I)静态IP用户可以使用非本机IP
	IP=
	;(G)网关，无关紧要
	Gateway=
	;(S)DNS服务器，无关紧要
	DNS=
	;(F)认证数据包，如果需要校验客户端，就需要正确设置，否则不必自找麻烦
	Package=/etc/mentohust/3_50.mpf
	;(T)每次发包超时时间（秒）
	Timeout=3
	;(E)发送Echo包的间隔（秒）
	EchoInterval=30
	;(R)定时重连间隔（分）（如果学校支持使用私有地址认证，就可以把自动重连间隔设短一点，因为这种情况除非掉线才真正开始重连，否则建议设为0）
	AutoReconnect=
	;(A)寻找服务器时的组播地址类型 0标准 1私有
	StartAddress=1
	;(D)DHCP方式 0(不使用) 1(二次认证) 2(认证后) 3(认证前)
	DhcpMode=0
	;(C)进行DHCP的脚本（可以为dhclient eth0等）
	DhcpScript=dhclient
}}}

==3、MentoHUST使用起来比其他客户端麻烦？==
 * 这是对于MentoHUST的误解。MentoHUST的默认发包是与xrgsu兼容的，一般没有开启客户端校验的学校都开放了xrgsu的认证，也就是说学校没有开启客户端校验的情况下，一般是可以无需配置mpf文件即可通过认证的，这时使用MentoHUST绝对不比官方的xrgsu麻烦。
 * MentoHUST的“自定义数据包”只是一个可选功能，用于应付关闭了xrgsu认证的情况，这种情况多发于学校开启了客户端校验。MentoHUST支持V2客户端校验（暂不支持V3，V3目前无人攻破），要实现这一功能就需要使用MentoHUSTTool抓包后配置来实现。
 * 有些学校虽然没开启客户端校验，但对于版本有特定要求，现有其他第三方锐捷客户端要兼容一个新版本，必须通过修改源代码来实现，这对于对代码不太熟悉的人来说并不是件轻松的事情，而使用MentoHUST的“自定义数据包”功能则可无需修改任何代码就实现这点。
 * 总之，MentoHUST的“自定义数据包”只是一个可选功能，其他客户端能认证的情况下MentoHUST基本上不使用这一功能也可认证，使得操作变麻烦的“自定义数据包”功能是为了实现其他客户端无法实现的功能。

==4、我想装Linux，但又担心在Linux下不能通过锐捷认证，能否提前知道这点？==
 * 完全可以，MentoHUST可以说是目前对锐捷兼容性最好的客户端，如果使用MentoHUST无法认证成功，那么使用其他客户端也几乎不可能成功，也就是说可以把MentoHUST能否认证成功当做在Linux下能否通过锐捷认证的标准。而最新版的MentoHUST Windows版与Linux版是完全兼容的，这样就可以先在Windows下测试是否可以（使用数据包时可能会提示“所选数据包无效”，这时需要把系统日期改为9.1之前，这是对于Windows版特意做的一个限制，毕竟Windows下有官方的锐捷）。

==5、MentoHUST能否移植到其他平台？==
 * 到目前（2009.9.25）为止，MentoHUST一直都是由一个人在开发与维护，由于开发条件有限，无法测试是否可以移植到其他平台。曾经尝试在Cygwin下编译MentoHUST，经过一些修改后可以编译并认证成功，但由于Cygwin不支持SIGALRM中断，所以定时器无效，会掉线。由于没有路由器和MacOS，所以无法知道在这些系统上的情况。希望在开放源代码后能有人参与进来共同维护与改进。

==6、MentoHUST没有Deamon、打包、ping等功能？==
 * 在Linux的应用上，我就是一个门外汉，对我来说Deamon、打包等都不需要，所以我没有花时间去学习这些。开放源代码后如果有人认为这些很必要，欢迎参与进来并加入这些功能。
 * 至于ping某个网关测试是否掉线，根据1年前我使用Mento的感受来看，这一功能不是太可靠，有时会因故无法ping通而不断重连，所以没必要费力在程序中实现这点。根据我的使用经验，如果可以使用私有地址认证成功，那么除非掉线否则服务器是不会再次接受私有地址的认证请求，所有MentoHUST中设计了定时重连的功能，如果支持私有地址认证，就可以把重连间隔设的很小，这样并不会真正重连，但可以像ping一样实现防掉线。当然使用标准地址认证时还是建议将该值设为0以关闭定时重连。

==7、MentoHUST能否支持其他客户端的校验？==
 * 已经存在MentoHUST赛尔版（只支持静态IP），最新版的MentoHUST Windows版支持锐捷和赛尔，赛尔的动态IP估计也是支持的，有兴趣的可以修改MentoHUST使得支持更多客户端。

_OMG，没想到我居然写了这么多，就这样吧。欢迎高手参与进来共同开发维护MentoHUST！2009.9.25_